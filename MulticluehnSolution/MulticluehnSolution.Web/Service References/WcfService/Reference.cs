//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.0
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace MulticluehnSolution.Web.WcfService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WcfService.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrowdfundingPlan/TestGetData", ReplyAction="http://tempuri.org/ICrowdfundingPlan/TestGetDataResponse")]
        string TestGetData(string str);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrowdfundingPlan/TestGetData", ReplyAction="http://tempuri.org/ICrowdfundingPlan/TestGetDataResponse")]
        System.Threading.Tasks.Task<string> TestGetDataAsync(string str);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrowdfundingPlan/GetCrowdPlanByID", ReplyAction="http://tempuri.org/ICrowdfundingPlan/GetCrowdPlanByIDResponse")]
        string GetCrowdPlanByID(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrowdfundingPlan/GetCrowdPlanByID", ReplyAction="http://tempuri.org/ICrowdfundingPlan/GetCrowdPlanByIDResponse")]
        System.Threading.Tasks.Task<string> GetCrowdPlanByIDAsync(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrowdfundingPlan/Update", ReplyAction="http://tempuri.org/ICrowdfundingPlan/UpdateResponse")]
        void Update(string Crowdmodel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrowdfundingPlan/Update", ReplyAction="http://tempuri.org/ICrowdfundingPlan/UpdateResponse")]
        System.Threading.Tasks.Task UpdateAsync(string Crowdmodel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrowdfundingPlan/CrowdfundingPlanAdd", ReplyAction="http://tempuri.org/ICrowdfundingPlan/CrowdfundingPlanAddResponse")]
        void CrowdfundingPlanAdd(string Crowdmodel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrowdfundingPlan/CrowdfundingPlanAdd", ReplyAction="http://tempuri.org/ICrowdfundingPlan/CrowdfundingPlanAddResponse")]
        System.Threading.Tasks.Task CrowdfundingPlanAddAsync(string Crowdmodel);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : MulticluehnSolution.Web.WcfService.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<MulticluehnSolution.Web.WcfService.IService>, MulticluehnSolution.Web.WcfService.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string TestGetData(string str) {
            return base.Channel.TestGetData(str);
        }
        
        public System.Threading.Tasks.Task<string> TestGetDataAsync(string str) {
            return base.Channel.TestGetDataAsync(str);
        }
        
        public string GetCrowdPlanByID(string ID) {
            return base.Channel.GetCrowdPlanByID(ID);
        }
        
        public System.Threading.Tasks.Task<string> GetCrowdPlanByIDAsync(string ID) {
            return base.Channel.GetCrowdPlanByIDAsync(ID);
        }
        
        public void Update(string Crowdmodel) {
            base.Channel.Update(Crowdmodel);
        }
        
        public System.Threading.Tasks.Task UpdateAsync(string Crowdmodel) {
            return base.Channel.UpdateAsync(Crowdmodel);
        }
        
        public void CrowdfundingPlanAdd(string Crowdmodel) {
            base.Channel.CrowdfundingPlanAdd(Crowdmodel);
        }
        
        public System.Threading.Tasks.Task CrowdfundingPlanAddAsync(string Crowdmodel) {
            return base.Channel.CrowdfundingPlanAddAsync(Crowdmodel);
        }
    }
}
